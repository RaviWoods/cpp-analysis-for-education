{
  "_args": [
    [
      {
        "raw": "libclang@^0.0.11",
        "scope": null,
        "escapedName": "libclang",
        "name": "libclang",
        "rawSpec": "^0.0.11",
        "spec": ">=0.0.11 <0.0.12",
        "type": "range"
      },
      "/Users/raviwoods/Google_Drive/ICComp/Uni_Year_3/Project/cpp-analysis-for-education/Implementation/prototype/libclagtest"
    ]
  ],
  "_from": "libclang@>=0.0.11 <0.0.12",
  "_id": "libclang@0.0.11",
  "_inCache": true,
  "_location": "/libclang",
  "_npmUser": {
    "name": "tjfontaine",
    "email": "tjfontaine@gmail.com"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "libclang@^0.0.11",
    "scope": null,
    "escapedName": "libclang",
    "name": "libclang",
    "rawSpec": "^0.0.11",
    "spec": ">=0.0.11 <0.0.12",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/libclang/-/libclang-0.0.11.tgz",
  "_shasum": "3e496e7ffd63f8911baa6b687f1c9018b225d3cb",
  "_shrinkwrap": null,
  "_spec": "libclang@^0.0.11",
  "_where": "/Users/raviwoods/Google_Drive/ICComp/Uni_Year_3/Project/cpp-analysis-for-education/Implementation/prototype/libclagtest",
  "author": {
    "name": "Timothy J Fontaine",
    "email": "tjfontaine@gmail.com"
  },
  "dependencies": {
    "ffi": "",
    "ref": "",
    "ref-array": "",
    "ref-struct": ""
  },
  "description": "Bindings to libclang",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "3e496e7ffd63f8911baa6b687f1c9018b225d3cb",
    "tarball": "https://registry.npmjs.org/libclang/-/libclang-0.0.11.tgz"
  },
  "keywords": [
    "libclang",
    "ffi",
    "bindings"
  ],
  "license": "MIT",
  "main": "libclang.js",
  "maintainers": [
    {
      "name": "tjfontaine",
      "email": "tjfontaine@gmail.com"
    }
  ],
  "name": "libclang",
  "optionalDependencies": {},
  "readme": "node-libclang\n=============\nnode.js module for libclang and parsing c-style source from javascript\n\nAST Traversal\n-------------\n```javascript\nvar libclang = require('libclang');\n\nvar index = new libclang.index();\nvar tu = new libclang.translationunit();\n\ntu.fromSource(idx, 'myLibrary.h', ['-I/path/to/my/project']);\n\ntu.cursor().visitChildren(function (parent) {\n  switch (this.kind) {\n    case libclang.KINDS.CXCursor_FunctionDecl:\n      console.log(this.spelling);\n      break;\n  }\n  return libclang.CXChildVisit_Continue;\n});\n\nindex.dispose();\ntu.dispose();\n````\n\nGenerate FFI Bindings\n---------------------\nThis has been moved to its own library `npm install -g ffi-generate`\n\nSee also https://github.com/tjfontaine/node-ffi-generate\n\nNotes\n-----\nNot all of libclang is wrapped yet, but there's enough for\n[ffi-generate](https://github.com/tjfontaine/node-ffi-generate) to regenerate\nthe dynamic clang bindings.\n\nThe native wrapper isn't completely fleshed out or free of errors. Enough is\nwrapped to allow for C modules to be successfully generated by `lib/generateffi.js`.\n",
  "readmeFilename": "README.md",
  "version": "0.0.11"
}
