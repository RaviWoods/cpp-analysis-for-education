{
  "_args": [
    [
      {
        "raw": "appdmg@^0.3.2",
        "scope": null,
        "escapedName": "appdmg",
        "name": "appdmg",
        "rawSpec": "^0.3.2",
        "spec": ">=0.3.2 <0.4.0",
        "type": "range"
      },
      "/Users/raviwoods/Google_Drive/ICComp/Uni_Year_3/Project/cpp-analysis-for-education/Implementation/js_project/node_modules/electron-installer-dmg"
    ]
  ],
  "_from": "appdmg@>=0.3.2 <0.4.0",
  "_id": "appdmg@0.3.10",
  "_inCache": true,
  "_location": "/appdmg",
  "_nodeVersion": "5.10.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/appdmg-0.3.10.tgz_1463320327713_0.5864309975877404"
  },
  "_npmUser": {
    "name": "linusu",
    "email": "linus@folkdatorn.se"
  },
  "_npmVersion": "3.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "appdmg@^0.3.2",
    "scope": null,
    "escapedName": "appdmg",
    "name": "appdmg",
    "rawSpec": "^0.3.2",
    "spec": ">=0.3.2 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/electron-installer-dmg"
  ],
  "_resolved": "https://registry.npmjs.org/appdmg/-/appdmg-0.3.10.tgz",
  "_shasum": "d63a12febe92b72db155c8e6353771286a04b263",
  "_shrinkwrap": null,
  "_spec": "appdmg@^0.3.2",
  "_where": "/Users/raviwoods/Google_Drive/ICComp/Uni_Year_3/Project/cpp-analysis-for-education/Implementation/js_project/node_modules/electron-installer-dmg",
  "author": {
    "name": "Linus UnnebÃ¤ck",
    "email": "linus@folkdatorn.se"
  },
  "bin": {
    "appdmg": "bin/appdmg.js"
  },
  "bugs": {
    "url": "https://github.com/LinusU/node-appdmg/issues"
  },
  "dependencies": {
    "async": "^1.4.2",
    "cp-file": "^3.1.0",
    "ds-store": "~0.1.4",
    "fs-temp": "^1.0.0",
    "fs-xattr": "^0.1.14",
    "image-size": "^0.5.0",
    "is-my-json-valid": "^2.13.1",
    "minimist": "^1.1.3",
    "repeat-string": "^1.5.4"
  },
  "description": "Generate beautiful DMG-images for your OS X applications.",
  "devDependencies": {
    "capture-window": "^0.1.3",
    "looks-same": "^2.1.0",
    "mocha": "^2.2.5",
    "standard": "^7.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "d63a12febe92b72db155c8e6353771286a04b263",
    "tarball": "https://registry.npmjs.org/appdmg/-/appdmg-0.3.10.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "8989b762884b42b90698be789731ff1a87c1c31f",
  "homepage": "https://github.com/LinusU/node-appdmg#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "linusu",
      "email": "linus@folkdatorn.se"
    }
  ],
  "name": "appdmg",
  "optionalDependencies": {},
  "os": [
    "darwin"
  ],
  "preferGlobal": true,
  "readme": "# node-appdmg\n\nGenerate beautiful DMG-images for your OS X applications.\n\n## Installation\n\n```sh\nnpm install -g appdmg\n```\n\n## Usage\n\n```sh\nappdmg <json-path> <dmg-path>\n```\n\n- `json-path`: Path to the JSON Specification file\n- `dmg-path`:  Path at which to place the final DMG\n\n## Test\n\nTo produce a test DMG to your desktop, run the following command:\n\n```sh\nappdmg test/appdmg.json ~/Desktop/test.dmg\n```\n\n## JSON Specification\n\n![Visualization](/help/help.png?raw=true)\n\nThe specification for the image is a simple json file, example provided\nbelow. All paths are relative to the json-file's path. (Comments are not\nallowed, I'm only using them for demonstration purposes.)\n\n```javascript\n{\n\n  // The title of the produced DMG, which will be shown when mounted\n  \"title\": \"Test Title\",\n\n  // Path to your icon, which will be shown when mounted\n  \"icon\": \"TestIcon.icns\",\n\n  // Path to your background\n  \"background\": \"TestBkg.png\",\n\n  // Size of all the icons inside the DMG\n  \"icon-size\": 80,\n\n  \"contents\": [\n\n    // This is the contents of your DMG.\n\n    // Each entry has a position specified by\n    // X and Y in the center of its icon.\n\n    // `type: link` creates a link to the specified target\n    { \"x\": 448, \"y\": 344, \"type\": \"link\", \"path\": \"/Applications\" },\n\n    // `type: file` adds a file to the DMG\n    { \"x\": 192, \"y\": 344, \"type\": \"file\", \"path\": \"TestApp.app\" },\n    { \"x\": 512, \"y\": 128, \"type\": \"file\", \"path\": \"TestDoc.txt\" }\n\n  ]\n\n}\n```\n\n`0.1.x` used a different format on the specification. This format is still\nsupported but deprecated, please update your json.\n\n### Retina background\n\nFinder can display retina backgrounds if packaged correctly into a `.tiff`\nfile. `appdmg` will do this for you automatically if it can find a file\nwith the same name as the background appended with `@2x`.\n\nE.g. if the json contains `\"background\": \"TestBkg.png\"` then add a file\nwith the name `TestBkg@2x.png` into the same folder.\n\n### Image format\n\nThe specification also accepts an optional `format` field specifying which\nformat the resulting image should be in. The following values are accepted:\n\n- `UDRW` - UDIF read/write image\n- `UDRO` - UDIF read-only image\n- `UDCO` - UDIF ADC-compressed image\n- `UDZO` - UDIF zlib-compressed image\n- `UDBZ` - UDIF bzip2-compressed image (OS X 10.4+ only)\n- `ULFO` - UDIF lzfse-compressed image (OS X 10.11+ only)\n\n## API\n\nThe application can also be called from within\nanother javascript file, example:\n\n```javascript\n\nvar appdmg = require('appdmg');\nvar ee = appdmg({ source: 'test/appdmg.json', target: 'test.dmg' });\n\nee.on('progress', function (info) {\n\n  // info.current is the current step\n  // info.total is the total number of steps\n  // info.type is on of 'step-begin', 'step-end'\n\n  // 'step-begin'\n  // info.title is the title of the current step\n\n  // 'step-end'\n  // info.status is one of 'ok', 'skip', 'fail'\n\n});\n\nee.on('finish', function () {\n  // There now is a `test.dmg` file\n});\n\nee.on('error', function (err) {\n  // An error occurred\n});\n\n```\n\nYou can also pass in the specification directly instead of reading it from a file. `basepath` should be a path which will be used to resolve other paths in the specification.\n\n```javascript\nvar ee = appdmg({\n  target: 'test.dmg',\n  basepath: __dirname,\n  specification: {\n    \"title\": \"Test Title\",\n    // ...\n  }\n});\n```\n\n## OS Support\n\nCurrently the only supported os is Mac OS X.\n\nTrack the status of this here: https://github.com/LinusU/node-appdmg/issues/14\n\n## Alternatives\n\n* [create-dmg](https://github.com/andreyvit/create-dmg/blob/master/README.md), a Bash script\n* [dmgbuild](https://pypi.python.org/pypi/dmgbuild), a Python version\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/LinusU/node-appdmg.git"
  },
  "scripts": {
    "test": "standard && mocha -b"
  },
  "version": "0.3.10"
}
